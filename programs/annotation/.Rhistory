axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
lgn<-c(min(pvdata$Pvalue), max(pvdata$Pvalue))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
lgn<-c(min(pvdata$Pvalue)+0.00000001, max(pvdata$Pvalue))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
-log10(0)
lgn<-c(min(pvdata$Pvalue)+0.0000000001, max(pvdata$Pvalue)/2, max(pvdata$Pvalue))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=formatC(lgn, format = "e", digits = 1))+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=formatC(lgn, format = "e", digits = 1))+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=formatC(lgn, format = "e", digits = 1))+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
lgn<-c(min(pvdata$Pvalue), max(pvdata$Pvalue)/2, max(pvdata$Pvalue))
lgn<-c(min(pvdata$Pvalue), max(pvdata$Pvalue)/2, max(pvdata$Pvalue))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=formatC(lgn, format = "e", digits = 1))+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=formatC(lgn, format = "e", digits = 1))+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
lgn
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
lgn<-c(min(pvdata$Pvalue)+0.0000000001, max(pvdata$Pvalue)/2, max(pvdata$Pvalue))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=lgn,
low = "blue", high = "red")+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
rr<-ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=lgn,
low = "blue", high = "red")+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplotly(rr)
ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
scale_size(pvdata$significance)+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
guides(color = guide_legend(reverse=TRUE))+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
guides(size = guide_legend(reverse=TRUE))+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
#guides(size = guide_legend(reverse=TRUE))+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, alpha=Pvalue, color=Pvalue))+
geom_point()+
#guides(size = guide_legend(reverse=TRUE))+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
scale_size(trans="reverse")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
rr<-ggplot(pvdata, aes(x=Function, y=Module, size=significance, color=significance))+
geom_point()+
scale_size_continuous(name="P-value",
breaks=-log10(lgn),
labels=lgn)+
scale_color_gradient(name="P-value",
breaks=-log10(lgn),
labels=lgn,
low = "blue", high = "red")+
labs(x="Genes", y="Functions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplotly(rr)
View(pvdata)
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
scale_size(trans="reverse")+
scale_color(trans="reverse")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
scale_size(trans="reverse")+
scale_colour(trans="reverse")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
scale_size(trans="reverse")+
scale_color_manual(trans="reverse")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
ggplot(pvdata, aes(x=Function, y=Module, size=Pvalue, color=Pvalue))+
geom_point()+
scale_size(trans="reverse")+
scale_color_continuous(trans="reverse")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust =1, size=10, color = "black"),
axis.text.y=element_text(size=10, color = "black"),
legend.position="right",
legend.key.width=unit(1, "cm"),
legend.text=element_text(size=14),
legend.title=element_text(size=16),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "grey"),
panel.border = element_rect(fill = NA, colour = "black", size = 1),
panel.grid.major = element_line(colour = "lightgrey", linetype = "solid", size = 0.5,),
strip.background = element_rect(fill = "transparent", colour = "transparent"),
axis.ticks=element_line(colour="black"),
axis.ticks.length = unit(8, "pt"))
