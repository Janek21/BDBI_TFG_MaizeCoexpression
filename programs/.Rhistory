sc_data<-scale(Nrepl_data)
p<-prcomp(sc_data, scale=TRUE)
p<-prcomp(sc_data, scale=TRUE)
#pca plot
ggplot(sc_pca$x, aes(x=PC1, y=PC2))+
geom_point(size=6)+
scale_shape_manual(values = c(19, 1, 2, 15, 8))+
#scale_size_manual(values = c(2, 6))+
#scale_color_brewer(palette="Dark2")+
labs(title="Normalized PCA")+
theme_minimal()
sc_pca<-prcomp(sc_data, scale=TRUE)
#pca plot
ggplot(sc_pca$x, aes(x=PC1, y=PC2))+
geom_point(size=6)+
scale_shape_manual(values = c(19, 1, 2, 15, 8))+
#scale_size_manual(values = c(2, 6))+
#scale_color_brewer(palette="Dark2")+
labs(title="Normalized PCA")+
theme_minimal()
#pca plot
ggplot(sc_pca$x, aes(x=PC1, y=PC2))+
geom_point(size=3)+
scale_shape_manual(values = c(19, 1, 2, 15, 8))+
#scale_size_manual(values = c(2, 6))+
#scale_color_brewer(palette="Dark2")+
labs(title="Normalized PCA")+
theme_minimal()
View(sc_pca)
sc_pca$x
names(sc_pca$x)
summary(sc_pca)
#pca PC effect
pca_summ<-as.data.frame(summary(pca))
#pca PC effect
pca_summ<-as.data.frame(summary(sc_pca))
#pca PC effect
pca_summ<-data.frame(summary(sc_pca))
#pca PC effect
pca_summ<-as.vector(summary(sc_pca))
View(pca_summ)
#pca PC effect
pca_summ<-summary(sc_pca)
pca_summ$x
#pca PC effect
summary(sc_pca)
#pca PC effect
z<-paste(summary(sc_pca))
#pca PC effect
z<-as.data.frame(paste(summary(sc_pca)))
View(z)
summary(sc_pca)
z<-as.data.frame(paste0(summary(sc_pca)))
summary(sc_pca)
z
z[,1]
z[1,]
length(z[1,])
length(as.vector(z[1,]))
length(as.numeric(z[1,]))
unlist(z[1,])
#pca PC effect
z<-data.frame(paste0(summary(sc_pca)))
z[1,]
#pca PC effect
z<-summary(sc_pca)
z$rotation
z$sdev
summary(sc_pca)
z$sdev
z$center
z
z$center
z$importance
z$importance
as.data.frame(z$importance)
pca_data<-as.data.frame(t(z$importance))
pca_data
plot(pca_data$`Standard deviation`)
plot(pca_data$`Proportion of Variance`)
plot(pca_data$`Cumulative Proportion`)
pca<-sc_pca
# Extract variance metrics
variance <- pca$sdev^2
prop_var <- variance / sum(variance)
cumulative_var <- cumsum(prop_var)
# Display results
data.frame(
PC = paste0("PC", 1:4),
Variance = variance,
Prop_Variance = prop_var,
Cumulative = cumulative_var
)
# Display results
data.frame(
PC = paste0("PC", 1:149),
Variance = variance,
Prop_Variance = prop_var,
Cumulative = cumulative_var
)
pca_data
data.frame(
PC = paste0("PC", 1:149),
Variance = variance,
Prop_Variance = prop_var,
Cumulative = cumulative_var
)
pca_data
sc_pca
View(sc_pca)
#pca plot
ggplot(sc_pca$x, aes(x=PC1, y=PC2))+
geom_point(size=3)+
scale_shape_manual(values = c(19, 1, 2, 15, 8))+
#scale_size_manual(values = c(2, 6))+
#scale_color_brewer(palette="Dark2")+
labs(title="Normalized PCA")+
theme_minimal()
kres<-kmeans(sc_pca$x, 3)
ggplot(sc_pca$x, aes(x=PC1, y=PC2, color=kres$cluster))
ggplot(sc_pca$x, aes(x=PC1, y=PC2, color=kres$cluster))
ggplot(sc_pca$x, aes(x=PC1, y=PC2, fill=kres$cluster))
kres$cluster
ggplot(sc_pca$x, aes(x=PC1, y=PC2, fill=kres$cluster))+geom_point()
ggplot(sc_pca$x, aes(x=PC1, y=PC2, color=kres$cluster))+geom_point()
kres<-kmeans(sc_pca$x, 2)
ggplot(sc_pca$x, aes(x=PC1, y=PC2, color=kres$cluster))+geom_point()
plot(sc_pca$x, aes(x=PC1, y=PC2, col=kres$cluster)
plot(sc_pca$x, aes(x=PC1, y=PC2, col=kres$cluster)
plot(sc_pca$x, col=kres$cluster)
kres<-kmeans(sc_pca$x, 3)
plot(sc_pca$x, col=kres$cluster)
kres<-kmeans(sc_pca$x, 6)
plot(sc_pca$x, col=kres$cluster)
plot(sc_pca$x, col=kres$cluster, shape=20)
plot(sc_pca$x, col=kres$cluster, shape=20)
plot(sc_pca$x, col=kres$cluster, shape=15)
plot(sc_pca$x, col=kres$cluster, alpha=15)
?plot
plot(sc_pca$x, col=kres$cluster, type="h")
plot(sc_pca$x, col=kres$cluster, type="l")
plot(sc_pca$x, col=kres$cluster, type="s")
plot(sc_pca$x, col=kres$cluster, type="p")
plot(sc_pca$x, col=kres$cluster, lwd="p")
plot(sc_pca$x, col=kres$cluster, lwd=10)
plot(sc_pca$x, col=kres$cluster, lwd=12)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 7)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 7)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 6)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 4)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 4)
plot(sc_pca$x, col=kres$cluster, lwd=3)
sc_pca[["x"]]
ncol(sc_pca$x)
#minPts=4 (d+1 or d*2)
mp<-ncol(sc_pca$x)+1
#eps: elbow plot
kNNdistplot(sc_pca$x, k=mp)
#minPts=4 (d+1 or d*2)
mp<-4
#eps: elbow plot
kNNdistplot(sc_pca$x, k=mp)
#minPts=4 (d+1 or d*2)
mp<-ncol(sc_pca$x)*2
#eps: elbow plot
kNNdistplot(sc_pca$x, k=mp)
e<-350
dbres<-dbscan(sc_pca$x, eps=e, minPts=mp)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
dbres<-dbscan(sc_pca$x, eps=e, minPts=mp)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
dbres<-dbscan(sc_pca$x, eps=e, minPts=4)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
View(dbscan_res)
dbres<-dbscan(sc_pca$x, eps=3, minPts=mp)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
dbres<-dbscan(sc_pca$x, eps=300, minPts=4)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 4)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 3)
plot(sc_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(sc_pca$x, 5)
plot(sc_pca$x, col=kres$cluster, lwd=3)
#Z-score scaling
sc_data<-scale(Nrepl_data)
#pca
sc_pca<-prcomp(sc_data, scale=TRUE)
View(sc_pca$x)
sc_pca$x
summary(sc_pca)
set.seed(42)
#Z-score scaling
sc_data<-scale(Nrepl_data)
#pca
sc_pca<-prcomp(sc_data, scale=TRUE)
#pca PC effect
pca_sum<-summary(sc_pca)
pca_data<-as.data.frame(t(z$importance))
plot(pca_data$`Cumulative Proportion`)
plot(pca_data$`Proportion of Variance`)
plot(pca_data$`Cumulative Proportion`)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
PC_<-1:ncol(pca_data$`Cumulative Proportion`)
pca_data$`Cumulative Proportion`
PC_1<-1:ncol(pca_data$`Cumulative Proportion`)
PC_1<-1:length(pca_data$`Cumulative Proportion`)
PC_c<-1:length(pca_data$`Cumulative Proportion`)
c_var<-pca_data$`Cumulative Proportion`
PC_c<-1:length(c_var)
slope<-diff(c_var)/diff(PC_c)
c_var[-1]
mid_x <- (c_var[-1] + c_var[-PC_c])/2
c_var[-PC_c]
c_var[-PC_c]
mid_x <- (c_var[-1] + c_var[-149])/2
c_var[-149]
mid_x <- (c_var[-1] + c_var[-length(c_var)])/2
c_var
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid="TRUE")
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid=TRUE)
c_var[-1]
c_var
c_var
c_var[-length(c_var)]
mid_x <- ()/2
c_var[-1] + c_var[-length(c_var)]
length(c_var[-1] + c_var[-length(c_var)])
length(c_var)
which.min(abs(slopes - 1))
which.min(abs(slope - 1))
a<-(c_var[2]-c_var[1])/(log(PC_c[2])-log(PC_c[1]))
b<-(c_var[1]-a*log(PC_c[1]))
cat("Function: y =", a, "* ln(x) +", b, "\n")
c_var<-pca_data$`Cumulative Proportion` #y
PC_c<-1:length(c_var) #x
a<-(length(c_var)-c_var[1])/(log(length(PC_c))-log(PC_c[1]))
b<-(c_var[1]-a*log(PC_c[1]))
cat("Function: y =", a, "* ln(x) +", b, "\n")
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid)+abline(a=30)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid)+abline(pca_data$`Cumulative Proportion`)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid)+abline(pca_data$`Cumulative Proportion`)
abline(pca_data$`Cumulative Proportion`, v = 30)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance", grid)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=30)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=13, col="red")
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=12, col="red")
c_var<-pca_data$`Cumulative Proportion` #y
PC_c<-1:length(c_var) #x
find_elbow <- function(x, y) {
# Ensure x and y are numeric vectors of equal length
stopifnot(is.numeric(x), is.numeric(y), length(x) == length(y))
# Endpoints of the line
x1 <- x[1]; y1 <- y[1]
x2 <- x[length(x)]; y2 <- y[length(y)]
# Direction vector of the line
dx <- x2 - x1
dy <- y2 - y1
normL <- sqrt(dx^2 + dy^2)
# Compute perpendicular distances for each point
distances <- abs( dx * (y1 - y) - (x1 - x) * dy ) / normL
# Find the index of maximum distance
elbow_idx <- which.max(distances)
list(
index      = elbow_idx,
x_value    = x[elbow_idx],
distance   = distances[elbow_idx],
all_distances = distances
)
}
res <- find_elbow(PC_c, c_var)
cat("Elbow at index", res$index, " (x =", res$x_value, ")\n")
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=18, col="red")
PC_c[1]-PC_c[length(PC_c)]
PC_c[length(PC_c)]-PC_c[1]
dx<-PC_c[length(PC_c)]-PC_c[1]
dy<-c_var[length(c_var)]-c_var[1]
sqrt(dx^2 + dy^2)
normL <- sqrt(dx^2 + dy^2)
y1<-c_var[1]
y2<-c_var[length(c_var)]
x2<-PC_c[length(PC_c)]
x1<-PC_c[1]
abs((y1-y)*dx - (x1-x)*dy )/normL
x<-PC_c
y<-c_var
#Compute distances to line for each point
distances<- abs((y1-y)*dx - (x1-x)*dy )/normL
distances
which.max(distances)
elbow_idx
#Get index of max distance
elbow_idx<- which.max(distances)
elbow_idx
x[elbow_idx]
x1<-x[1]
y1<-y[1]
x2<-x[length(x)]
y2<-y[length(y)]
#Calculate line from first to last point
dx<-x2-x1
dy<-y2-y1
normL<-sqrt(dx^2 + dy^2)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=18, col="red")
abline(normL)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=18, col="red")
plot(normL, type="l")
plot(normL)
normL
(y1-y)*dx
x2-x1
y2-y1
x
y
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
x2-x1
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], b=45)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], b=45)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], a=45)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], coef=c(2, -1))
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], coef=c(45, -1))
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], coef=c(2, -45))
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(v=PC_c[1], coef=c(2, -45))
abline(0,1)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(0,1, col="green")
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(0,1, col="green", lty=4)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(0,1, col="green", lwd=4)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(0,50, col="green", lwd=4)
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
abline(50,1, col="green", lwd=4)
minPunkt<-c(PC_c[1], c_var[length(c_var)])
#pca plot
ggplot(sc_pca$x, aes(x=PC1, y=PC2))+
geom_point(size=3)+
scale_shape_manual(values = c(19, 1, 2, 15, 8))+
#scale_size_manual(values = c(2, 6))+
#scale_color_brewer(palette="Dark2")+
labs(title="Normalized PCA")+
theme_minimal()
sc_pca$x
s<-as.data.frame(sc_pca$x)
View(s)
pc_cutoff<-res$x_value
pc_cutoff
sc_pca$x[,pc_cutoff]
sc_pca$x[pc_cutoff,]
as.data.frame(sc_pca$x[pc_cutoff,])
sc_pca$x[,1:pc_cutoff]
#pick comonents up to cutoff
ctf_pca<-as.data.frame(sc_pca$x[,1:pc_cutoff])
#pick components up to cutoff
ctf_pca<-as.data.frame(sc_pca$x[,1:pc_cutoff])
View(ctf_pca)
kres<-kmeans(ctf_pca, 5)
plot(ctf_pca, col=kres$cluster, lwd=3)
kres<-kmeans(ctf_pca, 5)
d_pca<-prcomp(ctf_pca)
kres<-kmeans(d_pca$x, 5)
plot(d_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(d_pca$x, 2)
plot(d_pca$x, col=kres$cluster, lwd=3)
kres<-kmeans(d_pca$x, 3)
plot(d_pca$x, col=kres$cluster, lwd=3)
print(PC_c[i])
for (i in 1:length(c_var)){
print(PC_c[i])
}
print(c_var[i])
for (i in 1:length(c_var)){
print(c_var[i])
}
print(PC_c[i])
for (i in 1:(length(c_var)+1){
for (i in 1:(length(c_var)+1)){
print(PC_c[i])
}
print(PC_c[i])
PC_c
pca_data$`Cumulative Proportion`
c(1,2)-(c0.5, 1)
c(1,2)-c(0.5, 1)
kres<-kmeans(d_pca$x, 6)
plot(d_pca$x, col=kres$cluster, lwd=3)
#minPts=4 (d+1 or d*2)
mp<-ncol(sc_pca$x)+1
#eps: elbow plot, choose shaprest point in bend
kNNdistplot(sc_pca$x, k=mp)
e<-350
dbres<-dbscan(sc_pca$x, eps=e, minPts=mp)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
#minPts=4 (d+1 or d*2)
mp<-ncol(sc_pca$x)+1
#eps: elbow plot, choose shaprest point in bend
kNNdistplot(sc_pca$x, k=mp)
e<-350
dbres<-dbscan(sc_pca$x, eps=e, minPts=mp)
plot(sc_pca$x, col=dbres$cluster, lwd=3)
dbres<-dbscan(sc_pca$x, eps=0.3, minPts=4)
dbres<-dbscan(d_pca$x, eps=0.3, minPts=4)
plot(d_pca$x, col=dbres$cluster, lwd=3)
plot(d_pca$x, col=dbres$cluster)
plot(d_pca$x)
plot(d_pca$x, col=dbres$cluster+1)
dbres<-dbscan(d_pca$x, eps=e, minPts=4)
plot(d_pca$x, col=dbres$cluster+1)
plot(d_pca$x, col=dbres$cluster+1, lwd=3)
dbres<-dbscan(d_pca$x, eps=e, minPts=mp)
plot(d_pca$x, col=dbres$cluster+1, lwd=3)
dbres<-dbscan(d_pca$x, eps=0.1, minPts=mp)
plot(d_pca$x, col=dbres$cluster+1, lwd=3)
#buscar cutoff
plot(pca_data$`Cumulative Proportion`, xlab="PC component number", ylab="Cumulative variance")
abline(v=PC_c[1], col="red")
abline(h=c_var[length(c_var)], col="red")
current<-minPunkt-PC_c[i]
current
for (i in 1:(length(c_var))){
current<-minPunkt-PC_c[i]
}
current
minPunkt
minPunkt<-c(PC_c[1], c_var[length(c_var)])
minPunkt
minPunkt<-c(PC_c[1], c_var[length(c_var)])
minCurrent<-c(Inf, Inf)
for (i in 1:(length(c_var))){
current<-minPunkt-c(PC_c[i], c_var[i])
}
current
for (i in 1:(length(c_var))){
current<-minPunkt-c(PC_c[i], c_var[i])
print(current)
}
minPunkt<-c(PC_c[1], c_var[length(c_var)])
minCurrent<-c(Inf, Inf)
emptyL<-data.frame()
for (i in 1:(length(c_var))){
current<-minPunkt-c(PC_c[i], c_var[i])
print(current)
emptyL<-rbind(emptyL, current)
}
emptyL
plot(emptyL$X0)
plot(emptyL$X0)
lines(emptyL$X0.21705)
plot(emptyL$X0.21705)
scale(emptyL)
d<-scale(emptyL)
d<-scale(emptyL)
plot(d$X0)
d<-as.data.frame(scale(emptyL))
plot(d$X0)
lines(d$X0.21705)
plot(d$X0)
lines(d$X0.21705)
emptyL
min1 <- min(emptyL$X0)
min2 <- min(emptyL$X0.21705)
result <- df[emptyL$X0 == min1 & emptyL$X0.21705 == min2, ]
which(emptyL$X0 == min1 & emptyL$X0.21705 == min2)
min1
min2
